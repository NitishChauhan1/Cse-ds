A temporal dead zone (TDZ) in JavaScript is the period within a scope where a let or const variable, though hoisted, cannot be accessed until it is initialized with a value. The TDZ starts at the beginning of the variable's block scope and ends when the variable's declaration and initialization occur. Attempting to access a variable within its TDZ will result in a ReferenceError, unlike var variables, which are initialized to undefined and do not have a TDZ
{
  // TDZ for 'myVar' starts here.
  console.log(myVar); // ReferenceError: Cannot access 'myVar' before initialization.
  
  let myVar = "Hello"; // 'myVar' is declared and initialized here. TDZ ends.
  
  console.log(myVar); // "Hello"
}